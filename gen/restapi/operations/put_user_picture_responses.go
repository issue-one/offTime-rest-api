// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutUserPictureOKCode is the HTTP code returned for type PutUserPictureOK
const PutUserPictureOKCode int = 200

/*PutUserPictureOK Success patching User.

swagger:response putUserPictureOK
*/
type PutUserPictureOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutUserPictureOK creates PutUserPictureOK with default headers values
func NewPutUserPictureOK() *PutUserPictureOK {

	return &PutUserPictureOK{}
}

// WithPayload adds the payload to the put user picture o k response
func (o *PutUserPictureOK) WithPayload(payload string) *PutUserPictureOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user picture o k response
func (o *PutUserPictureOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPictureOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutUserPictureBadRequestCode is the HTTP code returned for type PutUserPictureBadRequest
const PutUserPictureBadRequestCode int = 400

/*PutUserPictureBadRequest Illegal input for operation.

swagger:response putUserPictureBadRequest
*/
type PutUserPictureBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutUserPictureBadRequestBody `json:"body,omitempty"`
}

// NewPutUserPictureBadRequest creates PutUserPictureBadRequest with default headers values
func NewPutUserPictureBadRequest() *PutUserPictureBadRequest {

	return &PutUserPictureBadRequest{}
}

// WithPayload adds the payload to the put user picture bad request response
func (o *PutUserPictureBadRequest) WithPayload(payload *PutUserPictureBadRequestBody) *PutUserPictureBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user picture bad request response
func (o *PutUserPictureBadRequest) SetPayload(payload *PutUserPictureBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPictureBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserPictureUnauthorizedCode is the HTTP code returned for type PutUserPictureUnauthorized
const PutUserPictureUnauthorizedCode int = 401

/*PutUserPictureUnauthorized Unauthorized.

swagger:response putUserPictureUnauthorized
*/
type PutUserPictureUnauthorized struct {
}

// NewPutUserPictureUnauthorized creates PutUserPictureUnauthorized with default headers values
func NewPutUserPictureUnauthorized() *PutUserPictureUnauthorized {

	return &PutUserPictureUnauthorized{}
}

// WriteResponse to the client
func (o *PutUserPictureUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// PutUserPictureForbiddenCode is the HTTP code returned for type PutUserPictureForbidden
const PutUserPictureForbiddenCode int = 403

/*PutUserPictureForbidden Forbidden.

swagger:response putUserPictureForbidden
*/
type PutUserPictureForbidden struct {
}

// NewPutUserPictureForbidden creates PutUserPictureForbidden with default headers values
func NewPutUserPictureForbidden() *PutUserPictureForbidden {

	return &PutUserPictureForbidden{}
}

// WriteResponse to the client
func (o *PutUserPictureForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// PutUserPictureNotFoundCode is the HTTP code returned for type PutUserPictureNotFound
const PutUserPictureNotFoundCode int = 404

/*PutUserPictureNotFound Entity not found.

swagger:response putUserPictureNotFound
*/
type PutUserPictureNotFound struct {

	/*
	  In: Body
	*/
	Payload *PutUserPictureNotFoundBody `json:"body,omitempty"`
}

// NewPutUserPictureNotFound creates PutUserPictureNotFound with default headers values
func NewPutUserPictureNotFound() *PutUserPictureNotFound {

	return &PutUserPictureNotFound{}
}

// WithPayload adds the payload to the put user picture not found response
func (o *PutUserPictureNotFound) WithPayload(payload *PutUserPictureNotFoundBody) *PutUserPictureNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user picture not found response
func (o *PutUserPictureNotFound) SetPayload(payload *PutUserPictureNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPictureNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUserPictureInternalServerErrorCode is the HTTP code returned for type PutUserPictureInternalServerError
const PutUserPictureInternalServerErrorCode int = 500

/*PutUserPictureInternalServerError Server error.

swagger:response putUserPictureInternalServerError
*/
type PutUserPictureInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PutUserPictureInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutUserPictureInternalServerError creates PutUserPictureInternalServerError with default headers values
func NewPutUserPictureInternalServerError() *PutUserPictureInternalServerError {

	return &PutUserPictureInternalServerError{}
}

// WithPayload adds the payload to the put user picture internal server error response
func (o *PutUserPictureInternalServerError) WithPayload(payload *PutUserPictureInternalServerErrorBody) *PutUserPictureInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user picture internal server error response
func (o *PutUserPictureInternalServerError) SetPayload(payload *PutUserPictureInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserPictureInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

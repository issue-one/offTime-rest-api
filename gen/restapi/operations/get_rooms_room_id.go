// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetRoomsRoomIDHandlerFunc turns a function with the right signature into a get rooms room ID handler
type GetRoomsRoomIDHandlerFunc func(GetRoomsRoomIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRoomsRoomIDHandlerFunc) Handle(params GetRoomsRoomIDParams) middleware.Responder {
	return fn(params)
}

// GetRoomsRoomIDHandler interface for that can handle valid get rooms room ID params
type GetRoomsRoomIDHandler interface {
	Handle(GetRoomsRoomIDParams) middleware.Responder
}

// NewGetRoomsRoomID creates a new http.Handler for the get rooms room ID operation
func NewGetRoomsRoomID(ctx *middleware.Context, handler GetRoomsRoomIDHandler) *GetRoomsRoomID {
	return &GetRoomsRoomID{Context: ctx, Handler: handler}
}

/* GetRoomsRoomID swagger:route GET /rooms/{roomID} getRoomsRoomId

GetRoomsRoomID get rooms room ID API

*/
type GetRoomsRoomID struct {
	Context *middleware.Context
	Handler GetRoomsRoomIDHandler
}

func (o *GetRoomsRoomID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetRoomsRoomIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetRoomsRoomIDBadRequestBody get rooms room ID bad request body
//
// swagger:model GetRoomsRoomIDBadRequestBody
type GetRoomsRoomIDBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get rooms room ID bad request body
func (o *GetRoomsRoomIDBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get rooms room ID bad request body based on context it is used
func (o *GetRoomsRoomIDBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRoomsRoomIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRoomsRoomIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetRoomsRoomIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetRoomsRoomIDInternalServerErrorBody get rooms room ID internal server error body
//
// swagger:model GetRoomsRoomIDInternalServerErrorBody
type GetRoomsRoomIDInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get rooms room ID internal server error body
func (o *GetRoomsRoomIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get rooms room ID internal server error body based on context it is used
func (o *GetRoomsRoomIDInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRoomsRoomIDInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRoomsRoomIDInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetRoomsRoomIDInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/issue-one/offTime-rest-api/gen/models"
)

// GetUserRoomHistoryHandlerFunc turns a function with the right signature into a get user room history handler
type GetUserRoomHistoryHandlerFunc func(GetUserRoomHistoryParams, *models.User) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserRoomHistoryHandlerFunc) Handle(params GetUserRoomHistoryParams, principal *models.User) middleware.Responder {
	return fn(params, principal)
}

// GetUserRoomHistoryHandler interface for that can handle valid get user room history params
type GetUserRoomHistoryHandler interface {
	Handle(GetUserRoomHistoryParams, *models.User) middleware.Responder
}

// NewGetUserRoomHistory creates a new http.Handler for the get user room history operation
func NewGetUserRoomHistory(ctx *middleware.Context, handler GetUserRoomHistoryHandler) *GetUserRoomHistory {
	return &GetUserRoomHistory{Context: ctx, Handler: handler}
}

/* GetUserRoomHistory swagger:route GET /users/{username}/roomHistory getUserRoomHistory

GetUserRoomHistory get user room history API

*/
type GetUserRoomHistory struct {
	Context *middleware.Context
	Handler GetUserRoomHistoryHandler
}

func (o *GetUserRoomHistory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUserRoomHistoryParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *models.User
	if uprinc != nil {
		principal = uprinc.(*models.User) // this is really a models.User, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetUserRoomHistoryInternalServerErrorBody get user room history internal server error body
//
// swagger:model GetUserRoomHistoryInternalServerErrorBody
type GetUserRoomHistoryInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get user room history internal server error body
func (o *GetUserRoomHistoryInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get user room history internal server error body based on context it is used
func (o *GetUserRoomHistoryInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserRoomHistoryInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserRoomHistoryInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetUserRoomHistoryInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetUserRoomHistoryNotFoundBody get user room history not found body
//
// swagger:model GetUserRoomHistoryNotFoundBody
type GetUserRoomHistoryNotFoundBody struct {

	// May be null.
	Entity string `json:"entity,omitempty"`

	// May be null.
	Identifer string `json:"identifer,omitempty"`
}

// Validate validates this get user room history not found body
func (o *GetUserRoomHistoryNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get user room history not found body based on context it is used
func (o *GetUserRoomHistoryNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserRoomHistoryNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserRoomHistoryNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUserRoomHistoryNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

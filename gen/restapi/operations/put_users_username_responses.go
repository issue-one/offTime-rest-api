// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/issue-one/offTime-rest-api/gen/models"
)

// PutUsersUsernameOKCode is the HTTP code returned for type PutUsersUsernameOK
const PutUsersUsernameOKCode int = 200

/*PutUsersUsernameOK Success.

swagger:response putUsersUsernameOK
*/
type PutUsersUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewPutUsersUsernameOK creates PutUsersUsernameOK with default headers values
func NewPutUsersUsernameOK() *PutUsersUsernameOK {

	return &PutUsersUsernameOK{}
}

// WithPayload adds the payload to the put users username o k response
func (o *PutUsersUsernameOK) WithPayload(payload *models.User) *PutUsersUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users username o k response
func (o *PutUsersUsernameOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUsersUsernameBadRequestCode is the HTTP code returned for type PutUsersUsernameBadRequest
const PutUsersUsernameBadRequestCode int = 400

/*PutUsersUsernameBadRequest Illegal input for operation.

swagger:response putUsersUsernameBadRequest
*/
type PutUsersUsernameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutUsersUsernameBadRequestBody `json:"body,omitempty"`
}

// NewPutUsersUsernameBadRequest creates PutUsersUsernameBadRequest with default headers values
func NewPutUsersUsernameBadRequest() *PutUsersUsernameBadRequest {

	return &PutUsersUsernameBadRequest{}
}

// WithPayload adds the payload to the put users username bad request response
func (o *PutUsersUsernameBadRequest) WithPayload(payload *PutUsersUsernameBadRequestBody) *PutUsersUsernameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users username bad request response
func (o *PutUsersUsernameBadRequest) SetPayload(payload *PutUsersUsernameBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersUsernameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUsersUsernameConflictCode is the HTTP code returned for type PutUsersUsernameConflict
const PutUsersUsernameConflictCode int = 409

/*PutUsersUsernameConflict Field occupied.

swagger:response putUsersUsernameConflict
*/
type PutUsersUsernameConflict struct {

	/*
	  In: Body
	*/
	Payload *PutUsersUsernameConflictBody `json:"body,omitempty"`
}

// NewPutUsersUsernameConflict creates PutUsersUsernameConflict with default headers values
func NewPutUsersUsernameConflict() *PutUsersUsernameConflict {

	return &PutUsersUsernameConflict{}
}

// WithPayload adds the payload to the put users username conflict response
func (o *PutUsersUsernameConflict) WithPayload(payload *PutUsersUsernameConflictBody) *PutUsersUsernameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users username conflict response
func (o *PutUsersUsernameConflict) SetPayload(payload *PutUsersUsernameConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersUsernameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutUsersUsernameInternalServerErrorCode is the HTTP code returned for type PutUsersUsernameInternalServerError
const PutUsersUsernameInternalServerErrorCode int = 500

/*PutUsersUsernameInternalServerError Server error.

swagger:response putUsersUsernameInternalServerError
*/
type PutUsersUsernameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PutUsersUsernameInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutUsersUsernameInternalServerError creates PutUsersUsernameInternalServerError with default headers values
func NewPutUsersUsernameInternalServerError() *PutUsersUsernameInternalServerError {

	return &PutUsersUsernameInternalServerError{}
}

// WithPayload adds the payload to the put users username internal server error response
func (o *PutUsersUsernameInternalServerError) WithPayload(payload *PutUsersUsernameInternalServerErrorBody) *PutUsersUsernameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put users username internal server error response
func (o *PutUsersUsernameInternalServerError) SetPayload(payload *PutUsersUsernameInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUsersUsernameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

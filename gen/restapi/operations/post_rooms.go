// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostRoomsHandlerFunc turns a function with the right signature into a post rooms handler
type PostRoomsHandlerFunc func(PostRoomsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostRoomsHandlerFunc) Handle(params PostRoomsParams) middleware.Responder {
	return fn(params)
}

// PostRoomsHandler interface for that can handle valid post rooms params
type PostRoomsHandler interface {
	Handle(PostRoomsParams) middleware.Responder
}

// NewPostRooms creates a new http.Handler for the post rooms operation
func NewPostRooms(ctx *middleware.Context, handler PostRoomsHandler) *PostRooms {
	return &PostRooms{Context: ctx, Handler: handler}
}

/* PostRooms swagger:route POST /rooms postRooms

PostRooms post rooms API

*/
type PostRooms struct {
	Context *middleware.Context
	Handler PostRoomsHandler
}

func (o *PostRooms) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostRoomsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostRoomsBadRequestBody post rooms bad request body
//
// swagger:model PostRoomsBadRequestBody
type PostRoomsBadRequestBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post rooms bad request body
func (o *PostRoomsBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post rooms bad request body based on context it is used
func (o *PostRoomsBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostRoomsBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostRoomsBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostRoomsBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostRoomsBody post rooms body
//
// swagger:model PostRoomsBody
type PostRoomsBody struct {

	// room name
	RoomName string `json:"roomName,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this post rooms body
func (o *PostRoomsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post rooms body based on context it is used
func (o *PostRoomsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostRoomsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostRoomsBody) UnmarshalBinary(b []byte) error {
	var res PostRoomsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostRoomsInternalServerErrorBody post rooms internal server error body
//
// swagger:model PostRoomsInternalServerErrorBody
type PostRoomsInternalServerErrorBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post rooms internal server error body
func (o *PostRoomsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post rooms internal server error body based on context it is used
func (o *PostRoomsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostRoomsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostRoomsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PostRoomsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostRoomsNotFoundBody post rooms not found body
//
// swagger:model PostRoomsNotFoundBody
type PostRoomsNotFoundBody struct {

	// May be null.
	Entity string `json:"entity,omitempty"`

	// May be null.
	Identifer string `json:"identifer,omitempty"`
}

// Validate validates this post rooms not found body
func (o *PostRoomsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post rooms not found body based on context it is used
func (o *PostRoomsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostRoomsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostRoomsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PostRoomsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetTokenAuthRefreshOKCode is the HTTP code returned for type GetTokenAuthRefreshOK
const GetTokenAuthRefreshOKCode int = 200

/*GetTokenAuthRefreshOK Success refreshing token

swagger:response getTokenAuthRefreshOK
*/
type GetTokenAuthRefreshOK struct {

	/*
	  In: Body
	*/
	Payload *GetTokenAuthRefreshOKBody `json:"body,omitempty"`
}

// NewGetTokenAuthRefreshOK creates GetTokenAuthRefreshOK with default headers values
func NewGetTokenAuthRefreshOK() *GetTokenAuthRefreshOK {

	return &GetTokenAuthRefreshOK{}
}

// WithPayload adds the payload to the get token auth refresh o k response
func (o *GetTokenAuthRefreshOK) WithPayload(payload *GetTokenAuthRefreshOKBody) *GetTokenAuthRefreshOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get token auth refresh o k response
func (o *GetTokenAuthRefreshOK) SetPayload(payload *GetTokenAuthRefreshOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokenAuthRefreshOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTokenAuthRefreshUnauthorizedCode is the HTTP code returned for type GetTokenAuthRefreshUnauthorized
const GetTokenAuthRefreshUnauthorizedCode int = 401

/*GetTokenAuthRefreshUnauthorized Unauthorized.

swagger:response getTokenAuthRefreshUnauthorized
*/
type GetTokenAuthRefreshUnauthorized struct {
}

// NewGetTokenAuthRefreshUnauthorized creates GetTokenAuthRefreshUnauthorized with default headers values
func NewGetTokenAuthRefreshUnauthorized() *GetTokenAuthRefreshUnauthorized {

	return &GetTokenAuthRefreshUnauthorized{}
}

// WriteResponse to the client
func (o *GetTokenAuthRefreshUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetTokenAuthRefreshForbiddenCode is the HTTP code returned for type GetTokenAuthRefreshForbidden
const GetTokenAuthRefreshForbiddenCode int = 403

/*GetTokenAuthRefreshForbidden Forbidden.

swagger:response getTokenAuthRefreshForbidden
*/
type GetTokenAuthRefreshForbidden struct {
}

// NewGetTokenAuthRefreshForbidden creates GetTokenAuthRefreshForbidden with default headers values
func NewGetTokenAuthRefreshForbidden() *GetTokenAuthRefreshForbidden {

	return &GetTokenAuthRefreshForbidden{}
}

// WriteResponse to the client
func (o *GetTokenAuthRefreshForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetTokenAuthRefreshInternalServerErrorCode is the HTTP code returned for type GetTokenAuthRefreshInternalServerError
const GetTokenAuthRefreshInternalServerErrorCode int = 500

/*GetTokenAuthRefreshInternalServerError Server error.

swagger:response getTokenAuthRefreshInternalServerError
*/
type GetTokenAuthRefreshInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetTokenAuthRefreshInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetTokenAuthRefreshInternalServerError creates GetTokenAuthRefreshInternalServerError with default headers values
func NewGetTokenAuthRefreshInternalServerError() *GetTokenAuthRefreshInternalServerError {

	return &GetTokenAuthRefreshInternalServerError{}
}

// WithPayload adds the payload to the get token auth refresh internal server error response
func (o *GetTokenAuthRefreshInternalServerError) WithPayload(payload *GetTokenAuthRefreshInternalServerErrorBody) *GetTokenAuthRefreshInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get token auth refresh internal server error response
func (o *GetTokenAuthRefreshInternalServerError) SetPayload(payload *GetTokenAuthRefreshInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokenAuthRefreshInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

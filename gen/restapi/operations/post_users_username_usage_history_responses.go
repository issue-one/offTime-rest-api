// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/issue-one/offTime-rest-api/gen/models"
)

// PostUsersUsernameUsageHistoryOKCode is the HTTP code returned for type PostUsersUsernameUsageHistoryOK
const PostUsersUsernameUsageHistoryOKCode int = 200

/*PostUsersUsernameUsageHistoryOK Success adding AppUsage entry.

swagger:response postUsersUsernameUsageHistoryOK
*/
type PostUsersUsernameUsageHistoryOK struct {

	/*
	  In: Body
	*/
	Payload *models.AppUsage `json:"body,omitempty"`
}

// NewPostUsersUsernameUsageHistoryOK creates PostUsersUsernameUsageHistoryOK with default headers values
func NewPostUsersUsernameUsageHistoryOK() *PostUsersUsernameUsageHistoryOK {

	return &PostUsersUsernameUsageHistoryOK{}
}

// WithPayload adds the payload to the post users username usage history o k response
func (o *PostUsersUsernameUsageHistoryOK) WithPayload(payload *models.AppUsage) *PostUsersUsernameUsageHistoryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users username usage history o k response
func (o *PostUsersUsernameUsageHistoryOK) SetPayload(payload *models.AppUsage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUsernameUsageHistoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersUsernameUsageHistoryBadRequestCode is the HTTP code returned for type PostUsersUsernameUsageHistoryBadRequest
const PostUsersUsernameUsageHistoryBadRequestCode int = 400

/*PostUsersUsernameUsageHistoryBadRequest Illegal input for operation.

swagger:response postUsersUsernameUsageHistoryBadRequest
*/
type PostUsersUsernameUsageHistoryBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostUsersUsernameUsageHistoryBadRequestBody `json:"body,omitempty"`
}

// NewPostUsersUsernameUsageHistoryBadRequest creates PostUsersUsernameUsageHistoryBadRequest with default headers values
func NewPostUsersUsernameUsageHistoryBadRequest() *PostUsersUsernameUsageHistoryBadRequest {

	return &PostUsersUsernameUsageHistoryBadRequest{}
}

// WithPayload adds the payload to the post users username usage history bad request response
func (o *PostUsersUsernameUsageHistoryBadRequest) WithPayload(payload *PostUsersUsernameUsageHistoryBadRequestBody) *PostUsersUsernameUsageHistoryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users username usage history bad request response
func (o *PostUsersUsernameUsageHistoryBadRequest) SetPayload(payload *PostUsersUsernameUsageHistoryBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUsernameUsageHistoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersUsernameUsageHistoryNotFoundCode is the HTTP code returned for type PostUsersUsernameUsageHistoryNotFound
const PostUsersUsernameUsageHistoryNotFoundCode int = 404

/*PostUsersUsernameUsageHistoryNotFound Entity not found.

swagger:response postUsersUsernameUsageHistoryNotFound
*/
type PostUsersUsernameUsageHistoryNotFound struct {

	/*
	  In: Body
	*/
	Payload *PostUsersUsernameUsageHistoryNotFoundBody `json:"body,omitempty"`
}

// NewPostUsersUsernameUsageHistoryNotFound creates PostUsersUsernameUsageHistoryNotFound with default headers values
func NewPostUsersUsernameUsageHistoryNotFound() *PostUsersUsernameUsageHistoryNotFound {

	return &PostUsersUsernameUsageHistoryNotFound{}
}

// WithPayload adds the payload to the post users username usage history not found response
func (o *PostUsersUsernameUsageHistoryNotFound) WithPayload(payload *PostUsersUsernameUsageHistoryNotFoundBody) *PostUsersUsernameUsageHistoryNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users username usage history not found response
func (o *PostUsersUsernameUsageHistoryNotFound) SetPayload(payload *PostUsersUsernameUsageHistoryNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUsernameUsageHistoryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersUsernameUsageHistoryConflictCode is the HTTP code returned for type PostUsersUsernameUsageHistoryConflict
const PostUsersUsernameUsageHistoryConflictCode int = 409

/*PostUsersUsernameUsageHistoryConflict Field occupied.

swagger:response postUsersUsernameUsageHistoryConflict
*/
type PostUsersUsernameUsageHistoryConflict struct {

	/*
	  In: Body
	*/
	Payload *PostUsersUsernameUsageHistoryConflictBody `json:"body,omitempty"`
}

// NewPostUsersUsernameUsageHistoryConflict creates PostUsersUsernameUsageHistoryConflict with default headers values
func NewPostUsersUsernameUsageHistoryConflict() *PostUsersUsernameUsageHistoryConflict {

	return &PostUsersUsernameUsageHistoryConflict{}
}

// WithPayload adds the payload to the post users username usage history conflict response
func (o *PostUsersUsernameUsageHistoryConflict) WithPayload(payload *PostUsersUsernameUsageHistoryConflictBody) *PostUsersUsernameUsageHistoryConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users username usage history conflict response
func (o *PostUsersUsernameUsageHistoryConflict) SetPayload(payload *PostUsersUsernameUsageHistoryConflictBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUsernameUsageHistoryConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersUsernameUsageHistoryInternalServerErrorCode is the HTTP code returned for type PostUsersUsernameUsageHistoryInternalServerError
const PostUsersUsernameUsageHistoryInternalServerErrorCode int = 500

/*PostUsersUsernameUsageHistoryInternalServerError Server error.

swagger:response postUsersUsernameUsageHistoryInternalServerError
*/
type PostUsersUsernameUsageHistoryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostUsersUsernameUsageHistoryInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostUsersUsernameUsageHistoryInternalServerError creates PostUsersUsernameUsageHistoryInternalServerError with default headers values
func NewPostUsersUsernameUsageHistoryInternalServerError() *PostUsersUsernameUsageHistoryInternalServerError {

	return &PostUsersUsernameUsageHistoryInternalServerError{}
}

// WithPayload adds the payload to the post users username usage history internal server error response
func (o *PostUsersUsernameUsageHistoryInternalServerError) WithPayload(payload *PostUsersUsernameUsageHistoryInternalServerErrorBody) *PostUsersUsernameUsageHistoryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users username usage history internal server error response
func (o *PostUsersUsernameUsageHistoryInternalServerError) SetPayload(payload *PostUsersUsernameUsageHistoryInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUsernameUsageHistoryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

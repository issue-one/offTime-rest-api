// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteUserRoomHistoryOKCode is the HTTP code returned for type DeleteUserRoomHistoryOK
const DeleteUserRoomHistoryOKCode int = 200

/*DeleteUserRoomHistoryOK Success DELETing User roomHistory.

swagger:response deleteUserRoomHistoryOK
*/
type DeleteUserRoomHistoryOK struct {
}

// NewDeleteUserRoomHistoryOK creates DeleteUserRoomHistoryOK with default headers values
func NewDeleteUserRoomHistoryOK() *DeleteUserRoomHistoryOK {

	return &DeleteUserRoomHistoryOK{}
}

// WriteResponse to the client
func (o *DeleteUserRoomHistoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteUserRoomHistoryUnauthorizedCode is the HTTP code returned for type DeleteUserRoomHistoryUnauthorized
const DeleteUserRoomHistoryUnauthorizedCode int = 401

/*DeleteUserRoomHistoryUnauthorized Unauthorized.

swagger:response deleteUserRoomHistoryUnauthorized
*/
type DeleteUserRoomHistoryUnauthorized struct {
}

// NewDeleteUserRoomHistoryUnauthorized creates DeleteUserRoomHistoryUnauthorized with default headers values
func NewDeleteUserRoomHistoryUnauthorized() *DeleteUserRoomHistoryUnauthorized {

	return &DeleteUserRoomHistoryUnauthorized{}
}

// WriteResponse to the client
func (o *DeleteUserRoomHistoryUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// DeleteUserRoomHistoryForbiddenCode is the HTTP code returned for type DeleteUserRoomHistoryForbidden
const DeleteUserRoomHistoryForbiddenCode int = 403

/*DeleteUserRoomHistoryForbidden Forbidden.

swagger:response deleteUserRoomHistoryForbidden
*/
type DeleteUserRoomHistoryForbidden struct {
}

// NewDeleteUserRoomHistoryForbidden creates DeleteUserRoomHistoryForbidden with default headers values
func NewDeleteUserRoomHistoryForbidden() *DeleteUserRoomHistoryForbidden {

	return &DeleteUserRoomHistoryForbidden{}
}

// WriteResponse to the client
func (o *DeleteUserRoomHistoryForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// DeleteUserRoomHistoryInternalServerErrorCode is the HTTP code returned for type DeleteUserRoomHistoryInternalServerError
const DeleteUserRoomHistoryInternalServerErrorCode int = 500

/*DeleteUserRoomHistoryInternalServerError Server error.

swagger:response deleteUserRoomHistoryInternalServerError
*/
type DeleteUserRoomHistoryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *DeleteUserRoomHistoryInternalServerErrorBody `json:"body,omitempty"`
}

// NewDeleteUserRoomHistoryInternalServerError creates DeleteUserRoomHistoryInternalServerError with default headers values
func NewDeleteUserRoomHistoryInternalServerError() *DeleteUserRoomHistoryInternalServerError {

	return &DeleteUserRoomHistoryInternalServerError{}
}

// WithPayload adds the payload to the delete user room history internal server error response
func (o *DeleteUserRoomHistoryInternalServerError) WithPayload(payload *DeleteUserRoomHistoryInternalServerErrorBody) *DeleteUserRoomHistoryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete user room history internal server error response
func (o *DeleteUserRoomHistoryInternalServerError) SetPayload(payload *DeleteUserRoomHistoryInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteUserRoomHistoryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "offTime",
    "version": "1.0"
  },
  "paths": {
    "/rooms": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful GETting all Rooms",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Room"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "roomName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful POSTing rooms",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/rooms/{roomID}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success GETting room under roomID.",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/roomIdParam"
        }
      ]
    },
    "/rooms/{roomID}/userUsages": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "minLength": 5,
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "seconds",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success adding usageSeconds to Room.",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "422": {
            "description": "Room is ongoing."
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/roomIdParam"
        }
      ]
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success GETting Users.",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success GETting User under given username.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "put": {
        "description": "Create a User to the specifed username.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success DELETing user under given username"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success patching User.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/usernameParam"
        }
      ]
    },
    "/users/{username}/picture": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success patching User.",
            "schema": {
              "type": "string",
              "format": "url",
              "example": "http://pictureserver.com/picture102.png"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/usernameParam"
        }
      ]
    },
    "/users/{username}/roomHistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success gettin all Room history of User.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success DELETing User roomHistory."
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/usernameParam"
        }
      ]
    },
    "/users/{username}/usageHistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Success gettin all AppUsage history of User.",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AppUsage"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppUsageInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success adding AppUsage entry.",
            "schema": {
              "$ref": "#/definitions/AppUsage"
            }
          },
          "400": {
            "$ref": "#/responses/BadInput"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "409": {
            "$ref": "#/responses/Conflict"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success DELETing User usageHistory."
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/usernameParam"
        }
      ]
    }
  },
  "definitions": {
    "AppUsage": {
      "properties": {
        "appName": {
          "type": "string",
          "example": "Telegram"
        },
        "appPackageName": {
          "type": "string",
          "example": "com.example.telegram"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "dateOfUse": {
          "type": "string",
          "format": "date",
          "example": "24-04-1997"
        },
        "timeDuration": {
          "description": "Usage time in seconds.",
          "type": "integer"
        }
      }
    },
    "CreateAppUsageInput": {
      "required": [
        "appName",
        "appPackageName",
        "dateOfUse",
        "timeDuration"
      ],
      "properties": {
        "appName": {
          "type": "string",
          "example": "Telegram"
        },
        "appPackageName": {
          "type": "string",
          "example": "com.example.telegram"
        },
        "dateOfUse": {
          "type": "string",
          "format": "date",
          "example": "24-04-1997"
        },
        "timeDuration": {
          "description": "Usage time in seconds.",
          "type": "integer"
        }
      }
    },
    "CreateUserInput": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password",
          "minLength": 8,
          "example": "lula34"
        }
      }
    },
    "Room": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "endTime": {
          "description": "Room is ongoing if null.",
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 24:40:52,531"
        },
        "hostUsername": {
          "type": "string",
          "example": "lula34"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "example": "lula34's room"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "userUsages": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    },
    "UpdateUserInput": {
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "User": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "pictureURL": {
          "type": "string",
          "example": "http://pictureserver.com/picture102.png"
        },
        "roomHistory": {
          "description": "Rooms user has participated in.",
          "type": "array",
          "items": {
            "description": "IDs of rooms.",
            "type": "string",
            "format": "uuid"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "username": {
          "type": "string",
          "example": "lula34"
        }
      }
    }
  },
  "parameters": {
    "limitParam": {
      "type": "integer",
      "default": 25,
      "description": "Number of items to fetch.",
      "name": "limit",
      "in": "query"
    },
    "roomIdParam": {
      "type": "string",
      "format": "uuid",
      "name": "roomID",
      "in": "path",
      "required": true
    },
    "skipParam": {
      "type": "integer",
      "default": 0,
      "description": "Number of items to skip.",
      "name": "offset",
      "in": "query"
    },
    "usernameParam": {
      "minLength": 5,
      "type": "string",
      "name": "username",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "BadInput": {
      "description": "Illegal input for operation.",
      "schema": {
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "Conflict": {
      "description": "Field occupied.",
      "schema": {
        "properties": {
          "field": {
            "type": "string"
          }
        }
      }
    },
    "NotFound": {
      "description": "Entity not found.",
      "schema": {
        "properties": {
          "entity": {
            "description": "May be null.",
            "type": "string"
          },
          "identifer": {
            "description": "May be null.",
            "type": "string"
          }
        }
      }
    },
    "ServerError": {
      "description": "Server error.",
      "schema": {
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-components": {}
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "offTime",
    "version": "1.0"
  },
  "paths": {
    "/rooms": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "default": 25,
            "description": "Number of items to fetch.",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 0,
            "description": "Number of items to skip.",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful GETting all Rooms",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Room"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "roomName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful POSTing rooms",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/rooms/{roomID}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success GETting room under roomID.",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "name": "roomID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/rooms/{roomID}/userUsages": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "minLength": 5,
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "seconds",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success adding usageSeconds to Room.",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Room is ongoing."
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "name": "roomID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "default": 25,
            "description": "Number of items to fetch.",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 0,
            "description": "Number of items to skip.",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success GETting Users.",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success GETting User under given username.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Create a User to the specifed username.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Field occupied.",
            "schema": {
              "properties": {
                "field": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success DELETing user under given username"
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success patching User.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Field occupied.",
            "schema": {
              "properties": {
                "field": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "minLength": 5,
          "type": "string",
          "name": "username",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{username}/picture": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "image",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success patching User.",
            "schema": {
              "type": "string",
              "format": "url",
              "example": "http://pictureserver.com/picture102.png"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "minLength": 5,
          "type": "string",
          "name": "username",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{username}/roomHistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success gettin all Room history of User.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success DELETing User roomHistory."
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "minLength": 5,
          "type": "string",
          "name": "username",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{username}/usageHistory": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "default": 25,
            "description": "Number of items to fetch.",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "default": 0,
            "description": "Number of items to skip.",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success gettin all AppUsage history of User.",
            "schema": {
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AppUsage"
                  }
                },
                "totalCount": {
                  "type": "integer",
                  "example": 98738772
                }
              }
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppUsageInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success adding AppUsage entry.",
            "schema": {
              "$ref": "#/definitions/AppUsage"
            }
          },
          "400": {
            "description": "Illegal input for operation.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found.",
            "schema": {
              "properties": {
                "entity": {
                  "description": "May be null.",
                  "type": "string"
                },
                "identifer": {
                  "description": "May be null.",
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Field occupied.",
            "schema": {
              "properties": {
                "field": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Success DELETing User usageHistory."
          },
          "500": {
            "description": "Server error.",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "minLength": 5,
          "type": "string",
          "name": "username",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "AppUsage": {
      "properties": {
        "appName": {
          "type": "string",
          "example": "Telegram"
        },
        "appPackageName": {
          "type": "string",
          "example": "com.example.telegram"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "dateOfUse": {
          "type": "string",
          "format": "date",
          "example": "24-04-1997"
        },
        "timeDuration": {
          "description": "Usage time in seconds.",
          "type": "integer"
        }
      }
    },
    "CreateAppUsageInput": {
      "required": [
        "appName",
        "appPackageName",
        "dateOfUse",
        "timeDuration"
      ],
      "properties": {
        "appName": {
          "type": "string",
          "example": "Telegram"
        },
        "appPackageName": {
          "type": "string",
          "example": "com.example.telegram"
        },
        "dateOfUse": {
          "type": "string",
          "format": "date",
          "example": "24-04-1997"
        },
        "timeDuration": {
          "description": "Usage time in seconds.",
          "type": "integer"
        }
      }
    },
    "CreateUserInput": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password",
          "minLength": 8,
          "example": "lula34"
        }
      }
    },
    "Room": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "endTime": {
          "description": "Room is ongoing if null.",
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 24:40:52,531"
        },
        "hostUsername": {
          "type": "string",
          "example": "lula34"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "example": "lula34's room"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "userUsages": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    },
    "UpdateUserInput": {
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "User": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "pictureURL": {
          "type": "string",
          "example": "http://pictureserver.com/picture102.png"
        },
        "roomHistory": {
          "description": "Rooms user has participated in.",
          "type": "array",
          "items": {
            "description": "IDs of rooms.",
            "type": "string",
            "format": "uuid"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2009-05-08 14:40:52,531"
        },
        "username": {
          "type": "string",
          "example": "lula34"
        }
      }
    }
  },
  "parameters": {
    "limitParam": {
      "minimum": 0,
      "type": "integer",
      "default": 25,
      "description": "Number of items to fetch.",
      "name": "limit",
      "in": "query"
    },
    "roomIdParam": {
      "type": "string",
      "format": "uuid",
      "name": "roomID",
      "in": "path",
      "required": true
    },
    "skipParam": {
      "minimum": 0,
      "type": "integer",
      "default": 0,
      "description": "Number of items to skip.",
      "name": "offset",
      "in": "query"
    },
    "usernameParam": {
      "minLength": 5,
      "type": "string",
      "name": "username",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "BadInput": {
      "description": "Illegal input for operation.",
      "schema": {
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "Conflict": {
      "description": "Field occupied.",
      "schema": {
        "properties": {
          "field": {
            "type": "string"
          }
        }
      }
    },
    "NotFound": {
      "description": "Entity not found.",
      "schema": {
        "properties": {
          "entity": {
            "description": "May be null.",
            "type": "string"
          },
          "identifer": {
            "description": "May be null.",
            "type": "string"
          }
        }
      }
    },
    "ServerError": {
      "description": "Server error.",
      "schema": {
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-components": {}
}`))
}
